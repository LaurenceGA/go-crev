// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LaurenceGA/go-crev/mod (interfaces: ModulesWrapper)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockModulesWrapper is a mock of ModulesWrapper interface
type MockModulesWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockModulesWrapperMockRecorder
}

// MockModulesWrapperMockRecorder is the mock recorder for MockModulesWrapper
type MockModulesWrapperMockRecorder struct {
	mock *MockModulesWrapper
}

// NewMockModulesWrapper creates a new mock instance
func NewMockModulesWrapper(ctrl *gomock.Controller) *MockModulesWrapper {
	mock := &MockModulesWrapper{ctrl: ctrl}
	mock.recorder = &MockModulesWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockModulesWrapper) EXPECT() *MockModulesWrapperMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockModulesWrapper) List() (io.Reader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(io.Reader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockModulesWrapperMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockModulesWrapper)(nil).List))
}
