// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LaurenceGA/go-crev/internal/command/flow/trust (interfaces: ConfigReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	config "github.com/LaurenceGA/go-crev/internal/config"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigReader is a mock of ConfigReader interface
type MockConfigReader struct {
	ctrl     *gomock.Controller
	recorder *MockConfigReaderMockRecorder
}

// MockConfigReaderMockRecorder is the mock recorder for MockConfigReader
type MockConfigReaderMockRecorder struct {
	mock *MockConfigReader
}

// NewMockConfigReader creates a new mock instance
func NewMockConfigReader(ctrl *gomock.Controller) *MockConfigReader {
	mock := &MockConfigReader{ctrl: ctrl}
	mock.recorder = &MockConfigReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigReader) EXPECT() *MockConfigReaderMockRecorder {
	return m.recorder
}

// Load mocks base method
func (m *MockConfigReader) Load() (*config.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(*config.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load
func (mr *MockConfigReaderMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockConfigReader)(nil).Load))
}
